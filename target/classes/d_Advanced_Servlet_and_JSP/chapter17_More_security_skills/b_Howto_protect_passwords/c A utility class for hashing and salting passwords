Một lớp tiện ích để băm và thêm muối cho mật khẩu
Hình 17-6 trình bày một lớp tiện ích hoàn chỉnh có tên là PasswordUtil 
mà bạn có thể sử dụng để băm và thêm muối cho mật khẩu. Tất cả chức năng 
của lớp đã được đề cập trong các hình trước, nhưng lớp này bao gồm một 
phương thức main mà bạn có thể chạy để hiểu rõ hơn về cách lớp hoạt động.

Để chạy lớp này từ trong NetBeans, bạn có thể nhấp chuột phải vào tệp trong 
cửa sổ Dự án và chọn lệnh Chạy tệp. Hoặc, bạn có thể nhấp chuột phải bất kỳ 
nơi nào trong cửa sổ soạn thảo mã nguồn của nó và chọn lệnh Chạy tệp.

Khi bạn chạy mã này, nó sẽ hiển thị đầu ra tương tự như sau:
Băm cho 'sesame':
d0c04f4b195le4aeaaec8223ed2039e542f3aae805a6fa7f6d794e5afff5d272
Muối ngẫu nhiên:
6v695rTg2864GpVjwE752mS093GH1ak8U0uRAWdF304=
Băm có muối cho 'sesame':
lf41a55b2194ee7e064c197c74410fc03fef562ebc5c386cd7198blb81fb5f45

Điều này cho thấy giá trị băm cho "sesame", muối ngẫu nhiên được thêm vào 
"sesame" và giá trị băm có muối cho "sesame". Lưu ý rằng giá trị băm và 
giá trị băm có muối có cùng độ dài. Tuy nhiên, chúng chứa các giá trị khác 
hhau.


import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.util.Random;
import java.util.Base64;

public class PasswordUtil {
    public static String hashPassword (String password) throws NoSuchAlgorithmException{
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        md.reset();
        md.update(password.getBytes());
        byte[] mdArray = md.digest();
        StringBuilder sb = new StringBuilder(mdArray.length * 2);
        for (byte b : mdArray) {
            int v = b & 0xff;
            if(v < 16) {
                sb.append('0');
            }
            sb.append(Integer.toHexString(v));
        }
        return sb.toString();
    }

    public static String getSalt() {
        Random r = new SecureRandom();
        byte[] saltBytes = new byte[32];
        r.nextBytes(saltBytes);
        return Base64.getEncoder().encodeToString(saltBytes);
    }

    public static String hashAndSaltPassword (String password) 
                throws NoSuchAlgorithmException{
        String salt = getSalt();
        return hashPassword(password + salt);
    }

}