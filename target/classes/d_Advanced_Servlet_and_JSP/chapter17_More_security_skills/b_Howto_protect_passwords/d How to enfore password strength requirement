Làm thế nào để enfore (thực thi) yêu cầu mạnh về mật khẩu
Việc băm và gắn muối cho mật khẩu giúp bảo vệ chúng khỏi việc tấn công giai đoạn 
giải mã nếu kẻ tấn công có thể tiếp cận chúng. Nhưng điều này không ngăn chặn kẻ 
tấn công đoán mật khẩu yếu. Ngoài việc giáo dục người dùng của bạn về lợi ích của 
mật khẩu mạnh, bạn có thể viết mã để thực thi yêu cầu về sức mạnh của mật khẩu.
Ví dụ đầu tiên trong hình 17-7 cho thấy một phương thức có tên là 
`checkPasswordStrength` mà thực thi một số yêu cầu về sức mạnh của mật khẩu. 
Trong trường hợp này, phương thức chỉ kiểm tra xem mật khẩu không được để trống, 
không phải là một chuỗi khoảng trắng và có ít nhất tám ký tự. Nếu mật khẩu không 
đáp ứng những điều kiện này, phương thức này sẽ ném ra một ngoại lệ chứa một 
thông báo mô tả tại sao mật khẩu không đủ mạnh.
Một phương pháp thực tế hơn có thể thực thi yêu cầu mật khẩu nghiêm ngặt hơn. 
Một cách để làm điều đó là sử dụng API biểu thức chính quy (regular expressions) 
của Java. Biểu thức chính quy nằm ngoài phạm vi của cuốn sách này, nhưng bạn có 
thể tìm hiểu thêm về cách sử dụng chúng trong Java từ nhiều nguồn trực tuyến. 
Ngoài ra, bạn có thể tìm thấy các biểu thức chính quy đã được viết sẵn từ nhiều 
nguồn trực tuyến. Những biểu thức chính quy này có thể thực thi các yêu cầu như 
độ dài tối thiểu, ký tự đặc biệt bắt buộc, và sự pha trộn bắt buộc của các ký 
tự in hoa và thường.
Ví dụ thứ hai cho thấy cách sử dụng phương thức `checkPasswordStrength`. 
Nếu mật khẩu đáp ứng yêu cầu về độ dài, đoạn mã này sẽ in một thông báo ra 
luồng đầu ra cho biết mật khẩu hợp lệ. Ngược lại, đoạn mã này sẽ in thông báo 
được lưu trong ngoại lệ ra luồng đầu ra. Trong trường hợp này, mã gửi giá trị 
"sesame" cho phương thức, mà không đáp ứng yêu cầu về độ dài. Do đó, đoạn mã 
này sẽ in một thông báo ra luồng đầu ra cho biết mật khẩu quá ngắn.
Một ví dụ mã thực tế hơn có thể tiếp tục xử lý mật khẩu nếu nó đáp ứng yêu cầu 
về sức mạnh và hiển thị thông báo ngoại lệ trên trang web nếu nó không đáp ứng 
yêu cầu về sức mạnh. Điều này sẽ giúp người dùng biết tại sao mật khẩu của họ 
không qua được kiểm tra sức mạnh.

A method for enforcing password strength
public static void checkPasswordStrength(String password) throws Exception {
    if(password == null || password.strim().isEmpty()) {
        throw new Exception("Password cannot be empty");
    } else if(password.lenghth() < 8) {
        throw new Exception ("Password is too short. Must be at least 8 characters long.");
    }
}

Code that use this method
try {
    checkPasswordStrength("sesame");
    System.out.println("Password is valid");
} catch (Exception e) { 
    System.out.println(e.getMessage());
}